jobs:
- name: bosh-deployment-repo
  public: true
  serial: true
  plan:
    - do:
      - aggregate:
        - { get: bucc, trigger: false, passed: [sanity-check] }
        - { get: bosh-deployment, trigger: true }
        - { get: bucc-ci, trigger: false}
      - task: bosh-deployment
        file: bucc-ci/ci/tasks/get-latest-bosh-deployment/task.yml
      - task: bucc-manifests
        file: bucc-ci/ci/tasks/bucc-manifests/task.yml
      - put: bucc
        params:
          merge: true
          repository: bucc-out
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:    '(( concat meta.slack.fail_url " " meta.pipeline ": bosh-deployment-repo job failed" ))'

- name: concourse-release
  public: true
  serial: true
  plan:
    - do:
      - aggregate:
        - { get: bucc, trigger: false, passed: [sanity-check] }
        - { get: bucc-ci, trigger: false }
        - get: bosh-release-concourse
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: bucc-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-concourse
        params:
          OPS_FILE_PATH: ops/3-concourse-release.yml
          RELEASE_NAME: concourse
      - task: bucc-manifests
        file: bucc-ci/ci/tasks/bucc-manifests/task.yml
      - put: bucc
        params:
          merge: true
          repository: bucc-out
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:    '(( concat meta.slack.fail_url " " meta.pipeline ": concourse-release job failed" ))'

- name: garden-runc-release
  public: true
  serial: true
  plan:
    - do:
      - aggregate:
        - { get: bucc, trigger: false, passed: [sanity-check] }
        - { get: bucc-ci, trigger: false }
        - get: bosh-release-garden-runc
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: bucc-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-garden-runc
        params:
          OPS_FILE_PATH: ops/1-garden-runc-release.yml
          RELEASE_NAME: garden-runc
      - task: bucc-manifests
        file: bucc-ci/ci/tasks/bucc-manifests/task.yml
      - put: bucc
        params:
          merge: true
          repository: bucc-out
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:    '(( concat meta.slack.fail_url " " meta.pipeline ": garden-runc-release job failed" ))'

- name: update-credhub-cli
  public: true
  serial: true
  plan:
    - do:
      - aggregate:
        - { get: bucc, trigger: false, passed: [sanity-check] }
        - { get: bucc-ci, trigger: false }
        - get: credhub-cli
          trigger: true
          params:
            globs:
              - credhub-linux-*.tgz
      - task: update-credhub-cli
        file: bucc-ci/ci/tasks/update-cli/task.yml
        input_mapping: {update-cli: credhub-cli}
        params:
          NAME: credhub
      - task: bucc-manifests
        file: bucc-ci/ci/tasks/bucc-manifests/task.yml
      - put: bucc
        params:
          merge: true
          repository: bucc-out
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:    '(( concat meta.slack.fail_url " " meta.pipeline ": update-credhub-cli job failed" ))'

- name: update-bbr-cli
  public: true
  serial: true
  plan:
    - do:
      - aggregate:
        - { get: bucc, trigger: false, passed: [sanity-check] }
        - { get: bucc-ci, trigger: false }
        - get: bbr-cli
          trigger: true
          params:
            globs:
              - bbr-*.tar
      - task: update-bbr-cli
        file: bucc-ci/ci/tasks/update-cli/task.yml
        input_mapping: {update-cli: bbr-cli}
        params:
          NAME: bbr
      - task: bucc-manifests
        file: bucc-ci/ci/tasks/bucc-manifests/task.yml
      - put: bucc
        params:
          merge: true
          repository: bucc-out
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:    '(( concat meta.slack.fail_url " " meta.pipeline ": update-bbr-cli job failed" ))'

- name: update-bosh-cli
  public: true
  serial: true
  plan:
    - do:
      - aggregate:
        - { get: bucc, trigger: false, passed: [sanity-check] }
        - { get: bucc-ci, trigger: false }
        - get: bosh-cli
          trigger: true
          params:
            globs:
              - bosh-*.tar
      - task: update-bosh-cli
        file: bucc-ci/ci/tasks/update-cli/task.yml
        input_mapping: {update-cli: bosh-cli}
        params:
          NAME: bosh
      - task: bucc-manifests
        file: bucc-ci/ci/tasks/bucc-manifests/task.yml
      - put: bucc
        params:
          merge: true
          repository: bucc-out
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:    '(( concat meta.slack.fail_url " " meta.pipeline ": update-bosh-cli job failed" ))'
